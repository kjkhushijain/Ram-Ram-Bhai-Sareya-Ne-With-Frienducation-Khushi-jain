class Solution {
public:
    int singleNumber(vector<int>& nums) {
        // here, it is better to use bit manupulation as using an unordered map it will take space of O(n).
        vector<int> bits(32);
        // bits will store the number of times each bit will get repeated.
        for(int bit =0;bit<32;bit++){
            for(int i=0;i<nums.size();i++){
                if(nums[i] & (1<< bit)) bits[bit]++;
            }
        }
        int x=0;
        for(int bit=0;bit<32;bit++){
            if(bits[bit]%3) x+=(1<<bit);
            // the bit who is the factor of 3 will be included in the ans.
        }
        return x;
    }
};
