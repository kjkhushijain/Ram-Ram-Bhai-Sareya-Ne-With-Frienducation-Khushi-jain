class Solution {
public:

    void solve(string dig, string ds, int ind, string alpha[10], vector<string>&ans){
        //  base case
        if(ind>= dig.length()){
            ans.push_back(ds);
            return;
        }

        //processing

        int d = dig[ind] - '0';
        string letter = alpha[d];

        for(int i  = 0 ; i<letter.length();i++){
            ds.push_back(letter[i]);
            solve(dig,ds,ind+1,alpha,ans);
            ds.pop_back();  
        }
    }


    vector<string> letterCombinations(string digits) {
        vector<string>ans;
        if(digits.length()==0){
            return ans;
        }
        string ds = "";
        string alpha[10] = {"","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};

        //  solve using recursion

        solve(digits,ds,0,alpha,ans);

        return ans;
    }
};
