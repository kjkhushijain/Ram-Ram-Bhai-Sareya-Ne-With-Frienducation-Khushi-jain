#include <bits/stdc++.h> 
bool solve(int ind, int target, vector<int> &arr, vector<vector<int>> &dp){
    if(target==0){
        return true;
    }
    if(ind==0) {
        if(target==arr[0]) return true;
        return false;
    }
    if(dp[ind][target]!=-1) return dp[ind][target];
    bool nottake=solve(ind-1,target,arr,dp);
    bool take=false;
    if(target>=arr[ind]) take=solve(ind-1,target-arr[ind],arr,dp);
    return  dp[ind][target]=nottake | take;
}
bool subsetSumToK(int n, int k, vector<int> &arr) {
vector<vector<int>> dp(n, vector<int> (k+1,-1));
return solve(n-1,k,arr,dp);
}
