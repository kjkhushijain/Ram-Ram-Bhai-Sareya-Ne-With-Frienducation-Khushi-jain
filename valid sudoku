#include <vector>

class Solution {
public:
    bool isValidSudoku(std::vector<std::vector<char>> &board) {
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                if (board[i][j] != '.') {
                    if (!isValid(board, i, j, board[i][j])) {
                        return false;
                    }
                }
            }
        }
        return true;
    }

private:
    bool isValid(vector<vector<char>> &board, int row, int col, char c) {
        // Check the current row and column
        for (int i = 0; i < 9; i++) {
            if (i != col && board[row][i] == c) {
                return false;
            }
            if (i != row && board[i][col] == c) {
                return false;
            }
        }

        // Check the 3x3 subgrid
        int subgridRow = 3 * (row / 3);
        int subgridCol = 3 * (col / 3);
        for (int i = subgridRow; i < subgridRow + 3; i++) {
            for (int j = subgridCol; j < subgridCol + 3; j++) {
                if (i != row && j != col && board[i][j] == c) {
                    return false;
                }
            }
        }

        return true;
    }
};
